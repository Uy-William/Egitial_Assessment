{"ast":null,"code":"var _jsxFileName = \"D:\\\\Will\\\\Egitial_Assessment\\\\client\\\\src\\\\pages\\\\signup\\\\signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { ApolloClient, inMemoryCache, ApolloProvider, useQuery, gql, InMemoryCache } from \"@apollo/client\";\nimport AuthContext from \"../auth/AuthProvider\";\nimport './signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4001/graphql',\n  cache: new InMemoryCache()\n});\nconst SIGNUP_USER = gql`\n  mutation signup($email: String){\n    signup(email: $email){\n      email\n    }\n  }\n`;\n\nfunction SignUp() {\n  _s();\n\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const [useEmail, setEmail] = useState('');\n  const [addUser, {\n    loading\n  }] = useMutation(SIGNUP_USER, {\n    update(proxy, result) {\n      console.log(result);\n    },\n\n    variables: {\n      email: useEmail.email\n    }\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(useEmail);\n    addUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUpDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"SignUpForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => setEmail(e.target.value),\n        value: useEmail,\n        placeholder: \"Enter Email Address\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"pq0r2DcQywgApYcHNcDbhAADe5U=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Will/Egitial_Assessment/client/src/pages/signup/signup.js"],"names":["React","useState","useEffect","useRef","useContext","useMutation","ApolloClient","inMemoryCache","ApolloProvider","useQuery","gql","InMemoryCache","AuthContext","client","uri","cache","SIGNUP_USER","SignUp","setAuth","useEmail","setEmail","addUser","loading","update","proxy","result","console","log","variables","email","handleSubmit","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,EAAsDC,QAAtD,EAAgEC,GAAhE,EAAqEC,aAArE,QAA0F,gBAA1F;AAEA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BQ,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf;AAMA,MAAMK,WAAW,GAAGN,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;;AASA,SAASO,MAAT,GAAkB;AAAA;;AAEhB,QAAM;AAAEC,IAAAA;AAAF,MAAcd,UAAU,CAACQ,WAAD,CAA9B;AAEA,QAAM,CAAEO,QAAF,EAAYC,QAAZ,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM,CAACoB,OAAD,EAAU;AAAEC,IAAAA;AAAF,GAAV,IAAwBjB,WAAW,CAACW,WAAD,EAAc;AACrDO,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAHoD;;AAIrDG,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEV,QAAQ,CAACU;AADP;AAJ0C,GAAd,CAAzC;;AASA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAE,IAAAA,OAAO;AACR,GAJD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAES,YAAvC;AAAA,8BACE;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,QAAQ,EAAGC,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAFzB;AAGA,QAAA,KAAK,EAAEf,QAHP;AAIA,QAAA,WAAW,EAAC,qBAJZ;AAKA,QAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCQF,M;UAMuBZ,W;;;KANvBY,M;AAuCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ApolloClient, inMemoryCache, ApolloProvider, useQuery, gql, InMemoryCache } from \"@apollo/client\";\r\n\r\nimport AuthContext from \"../auth/AuthProvider\";\r\nimport './signup.css';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:4001/graphql',\r\n  cache: new InMemoryCache()\r\n})\r\n\r\n\r\nconst SIGNUP_USER = gql`\r\n  mutation signup($email: String){\r\n    signup(email: $email){\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nfunction SignUp() { \r\n  \r\n  const { setAuth } = useContext(AuthContext);\r\n\r\n  const [ useEmail, setEmail ] = useState('');\r\n\r\n  const [addUser, { loading}] = useMutation(SIGNUP_USER, {\r\n    update(proxy, result){\r\n      console.log(result);\r\n    },\r\n    variables: {\r\n      email: useEmail.email\r\n    }\r\n  })\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(useEmail);\r\n    addUser();\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"SignUpDiv\">\r\n      <form className='SignUpForm' onSubmit={handleSubmit}>\r\n        <input \r\n        type=\"email\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        value={useEmail}\r\n        placeholder=\"Enter Email Address\"\r\n        required\r\n        ></input>\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}