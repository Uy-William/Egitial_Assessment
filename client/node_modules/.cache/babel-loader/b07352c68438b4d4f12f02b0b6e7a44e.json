{"ast":null,"code":"var _jsxFileName = \"D:\\\\Will\\\\Egitial_Assessment\\\\client\\\\src\\\\pages\\\\question\\\\question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { List } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTION_API = gql`\n    {\n        questions{\n            description\n            answer{\n              option\n              points\n            }\n          }\n    }\n`;\n\nfunction Question() {\n  _s();\n\n  const {\n    loading,\n    data: {\n      questions: Quest\n    }\n  } = useQuery(QUESTION_API);\n  console.log(Quest);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"fetching question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this) : Quest && Quest.map(post => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: post.questions.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Question, \"K8rdTdjd3mIVSM9msiat4QklaQo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["D:/Will/Egitial_Assessment/client/src/pages/question/question.js"],"names":["React","useState","useEffect","useRef","useContext","useQuery","gql","List","QUESTION_API","Question","loading","data","questions","Quest","console","log","map","post","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,YAAY,GAAGF,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAWA,SAASG,QAAT,GAAoB;AAAA;;AAEhB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAE;AAACC,MAAAA,SAAS,EAAEC;AAAZ;AAAjB,MAAwCR,QAAQ,CAACG,YAAD,CAAtD;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,sBACG;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGMH,OAAO,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAIRG,KAAK,IAAIA,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACrB;AAAA,gBAAKA,IAAI,CAACL,SAAL,CAAeM;AAApB;AAAA;AAAA;AAAA;AAAA,YADO,CAPd;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAcD;;GAlBQT,Q;UAEyCJ,Q;;;KAFzCI,Q;AAoBT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nconst QUESTION_API = gql `\r\n    {\r\n        questions{\r\n            description\r\n            answer{\r\n              option\r\n              points\r\n            }\r\n          }\r\n    }\r\n`;\r\nfunction Question() {\r\n\r\n    const { loading, data: {questions: Quest} } = useQuery(QUESTION_API);\r\n    console.log(Quest);\r\n  return (\r\n     <div>\r\n         <h1>Question</h1>\r\n         \r\n          {loading ? (\r\n          <h1>fetching question...</h1>\r\n      ) : (\r\n\r\n          Quest && Quest.map(post => (\r\n            <ul>{post.questions.description}</ul>\r\n          ))\r\n      )}\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}