{"ast":null,"code":"var _jsxFileName = \"D:\\\\Will\\\\Egitial_Assessment\\\\client\\\\src\\\\pages\\\\question\\\\question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTION_API = gql`\n    {\n        questions{\n            description\n            answer{\n              option\n              points\n            }\n          }\n    }\n`;\n\nfunction Question() {\n  _s();\n\n  const {\n    loading,\n    data: {\n      getPost: posts\n    }\n  } = useQuery(QUESTION_API);\n\n  if (data) {\n    console.log(\"SUCESS!\");\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"question\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"76DgV3Vampe6jHXJaKB0Vzy61Tc=\", false, function () {\n  return [useQuery];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["D:/Will/Egitial_Assessment/client/src/pages/question/question.js"],"names":["React","useState","useEffect","useRef","useContext","useQuery","gql","QUESTION_API","Question","loading","data","getPost","posts","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,YAAY,GAAGD,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAWA,SAASE,QAAT,GAAoB;AAAA;;AAEhB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAEC;AAAX;AAAjB,MAAwCP,QAAQ,CAACE,YAAD,CAAtD;;AACA,MAAGG,IAAH,EAAS;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH;;AAEH,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAXQF,Q;UAEyCH,Q;;;KAFzCG,Q;AAaT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nconst QUESTION_API = gql `\r\n    {\r\n        questions{\r\n            description\r\n            answer{\r\n              option\r\n              points\r\n            }\r\n          }\r\n    }\r\n`;\r\nfunction Question() {\r\n\r\n    const { loading, data: { getPost: posts } } = useQuery(QUESTION_API);\r\n    if(data) {\r\n        console.log(\"SUCESS!\");\r\n        console.log(data);\r\n    }\r\n\r\n  return (\r\n    <div>question</div>\r\n  )\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}