{"ast":null,"code":"var _jsxFileName = \"D:\\\\Will\\\\Egitial_Assessment\\\\client\\\\src\\\\pages\\\\question\\\\question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\"; // import { Card, List } from \"semantic-ui-react\";\n\nimport './question.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QUESTION_API = gql`\n  {\n    questions {\n      id\n      description\n      answer {\n        id\n        option\n        isCorrect\n      }\n    }\n  }\n`;\n\nfunction Question() {\n  _s();\n\n  const {\n    loading,\n    data: {\n      questions: Quest\n    } = {}\n  } = useQuery(QUESTION_API);\n  const QuestionCount = Quest.length;\n  console.log(QuestionCount); //   console.log(Quest);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Question, \"OqIA2i20mwag1heHANznif+nmyc=\", false, function () {\n  return [useQuery];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["D:/Will/Egitial_Assessment/client/src/pages/question/question.js"],"names":["React","useState","useQuery","gql","QUESTION_API","Question","loading","data","questions","Quest","QuestionCount","length","console","log","currentQuestion","setCurrentQuestion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,YAAY,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAeA,SAASE,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAEC;AAAb,QAAuB;AAAxC,MAA+CP,QAAQ,CAACE,YAAD,CAA7D;AACA,QAAMM,aAAa,GAAGD,KAAK,CAACE,MAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ,EAHkB,CAKpB;;AACE,QAAM,CAAEI,eAAF,EAAmBC,kBAAnB,IAA0Cd,QAAQ,CAAC,CAAD,CAAxD;AAEA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAMD;;GAdQI,Q;UAC8CH,Q;;;KAD9CG,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\n// import { Card, List } from \"semantic-ui-react\";\r\n\r\nimport './question.css';\r\n\r\nconst QUESTION_API = gql`\r\n  {\r\n    questions {\r\n      id\r\n      description\r\n      answer {\r\n        id\r\n        option\r\n        isCorrect\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nfunction Question() {\r\n  const { loading, data: { questions: Quest } = {} } = useQuery(QUESTION_API);\r\n  const QuestionCount = Quest.length;\r\n  console.log(QuestionCount);\r\n\r\n//   console.log(Quest);\r\n  const [ currentQuestion, setCurrentQuestion ] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <h1>Question List:</h1>\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}