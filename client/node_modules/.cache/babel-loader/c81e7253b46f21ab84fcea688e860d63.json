{"ast":null,"code":"var _jsxFileName = \"D:\\\\Will\\\\Egitial_Assessment\\\\client\\\\src\\\\pages\\\\question\\\\question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { List } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTION_API = gql`\n  {\n    questions {\n        id\n      description\n      answer {\n        option\n        points\n      }\n    }\n  }\n`;\n\nfunction Question() {\n  _s();\n\n  const {\n    loading,\n    data: {\n      questions: Quest\n    } = {}\n  } = useQuery(QUESTION_API);\n  const Data = Quest.map(post => ({\n    id: 'post.id',\n    description: 'post.description',\n    option: 'post.option',\n    points: 'post.points'\n  }));\n  console.log(Data.description);\n  return /*#__PURE__*/_jsxDEV(List, {\n    bulleted: true,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetching data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List.Item, {\n      children: [Data.description, /*#__PURE__*/_jsxDEV(List.List, {\n        children: /*#__PURE__*/_jsxDEV(List.Item, {\n          children: Data.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, Data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Question, \"Uf85OiYYoY4rtPjEEyOsuEieXEI=\", false, function () {\n  return [useQuery];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["D:/Will/Egitial_Assessment/client/src/pages/question/question.js"],"names":["React","useState","useEffect","useRef","useContext","useQuery","gql","List","QUESTION_API","Question","loading","data","questions","Quest","Data","map","post","id","description","option","points","console","log","answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,YAAY,GAAGF,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAYA,SAASG,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAEC;AAAb,QAAuB;AAAxC,MAA+CR,QAAQ,CAACG,YAAD,CAA7D;AAEA,QAAMM,IAAI,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,KAAK;AAC5BC,IAAAA,EAAE,EAAE,SADwB;AAE5BC,IAAAA,WAAW,EAAE,kBAFe;AAG3BC,IAAAA,MAAM,EAAE,aAHmB;AAI3BC,IAAAA,MAAM,EAAE;AAJmB,GAAL,CAAd,CAAb;AAKEC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACI,WAAjB;AACF,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAA,cACGR,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAGJ,QAAC,IAAD,CAAM,IAAN;AAAA,iBACCI,IAAI,CAACI,WADN,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAYJ,IAAI,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,OAAgBT,IAAI,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvBQR,Q;UAC8CJ,Q;;;KAD9CI,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { List } from \"semantic-ui-react\";\r\n\r\nconst QUESTION_API = gql`\r\n  {\r\n    questions {\r\n        id\r\n      description\r\n      answer {\r\n        option\r\n        points\r\n      }\r\n    }\r\n  }\r\n`;\r\nfunction Question() {\r\n  const { loading, data: { questions: Quest } = {} } = useQuery(QUESTION_API);\r\n  \r\n  const Data = Quest.map(post => ({\r\n      id: 'post.id',\r\n      description: 'post.description',\r\n       option: 'post.option', \r\n       points: 'post.points'}))\r\n    console.log(Data.description);\r\n  return (\r\n    <List bulleted>\r\n      {loading ? (\r\n        <h1>Fetching data...</h1>\r\n      ) : (\r\n          <List.Item key={Data.id}>\r\n          {Data.description}\r\n          <List.List>\r\n            <List.Item>{Data.answer}</List.Item>\r\n          </List.List>\r\n        </List.Item>\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}