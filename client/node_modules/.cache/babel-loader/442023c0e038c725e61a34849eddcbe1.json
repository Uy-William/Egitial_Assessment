{"ast":null,"code":"var _jsxFileName = \"D:\\\\Will\\\\Egitial_Assessment\\\\client\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport SignupPage from './pages/Auth/Signup';\nimport QuestionPage from './pages/Question/question';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showBackdrop: false,\n      showMobileNav: false,\n      isAuth: false,\n      token: null,\n      userId: null,\n      authLoading: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    signupHandler = (event, authData) => {\n      event.preventDefault();\n      this.setState({\n        authLoading: true\n      });\n      const graphqlQuery = {\n        query: `\n        mutation CreateUser($email: String!) {\n          createUser(userInput: {email: $email}) {\n            _id\n            email\n          }\n        }\n      `,\n        variables: {\n          email: authData.signupForm.email.value\n        }\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(res => {\n        return res.json();\n      }).then(resData => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\"Validation failed. Make sure the email address isn't used yet!\");\n        }\n\n        if (resData.errors) {\n          throw new Error('Email has already been taken!');\n        }\n\n        console.log(resData);\n        this.setState({\n          isAuth: false,\n          authLoading: false\n        });\n        this.props.history.replace('/question');\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n    }; // Timer\n\n\n    setAutoLogout = milliseconds => {\n      setTimeout(() => {\n        this.logoutHandler();\n      }, milliseconds);\n    };\n\n    errorHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n  }\n\n  render() {\n    let routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(SignupPage, { ...props,\n          onSignup: this.signupHandler,\n          loading: this.state.authLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/question\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(QuestionPage, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n\n    if (this.state.isAuth) {\n      routes = /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(FeedPage, {\n            userId: this.state.userId,\n            token: this.state.token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:postId\",\n          render: props => /*#__PURE__*/_jsxDEV(SinglePostPage, { ...props,\n            userId: this.state.userId,\n            token: this.state.token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [this.state.showBackdrop && /*#__PURE__*/_jsxDEV(Backdrop, {\n        onClick: this.backdropClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        header: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this),\n        mobileNav: /*#__PURE__*/_jsxDEV(MobileNavigation, {\n          open: this.state.showMobileNav,\n          mobile: true,\n          onChooseItem: this.mobileNavHandler.bind(this, false),\n          onLogout: this.logoutHandler,\n          isAuth: this.state.isAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), routes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Will/Egitial_Assessment/client/src/App.js"],"names":["React","Component","Fragment","Route","Switch","Redirect","withRouter","Layout","Backdrop","Toolbar","MobileNavigation","ErrorHandler","FeedPage","SinglePostPage","SignupPage","QuestionPage","App","state","showBackdrop","showMobileNav","isAuth","token","userId","authLoading","error","componentDidMount","signupHandler","event","authData","preventDefault","setState","graphqlQuery","query","variables","email","signupForm","value","fetch","method","headers","body","JSON","stringify","then","res","json","resData","errors","status","Error","console","log","props","history","replace","catch","err","setAutoLogout","milliseconds","setTimeout","logoutHandler","errorHandler","render","routes","backdropClickHandler","mobileNavHandler","bind"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport SignupPage from './pages/Auth/Signup';\nimport QuestionPage from './pages/Question/question';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  componentDidMount() {\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const graphqlQuery = {\n      query: `\n        mutation CreateUser($email: String!) {\n          createUser(userInput: {email: $email}) {\n            _id\n            email\n          }\n        }\n      `,\n      variables: {\n        email: authData.signupForm.email.value,\n      }\n    };\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error('Email has already been taken!');\n        }\n        console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace('/question');\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  \n  // Timer\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/question\"\n          exact\n          render={props => (\n            <QuestionPage\n              {...props}\n            />\n          )}\n        />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={props => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}